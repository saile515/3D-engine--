cmake_minimum_required(VERSION 3.9)

# Proeject name - should not contain whitespace 
project(3D-Engine++)

#========== Global Configurations =============#
#----------------------------------------------#

# Set the C++ standard for all targets (It sets the flags
# (-std=c++11, -std=c++14 ...) on Clang or GCC. and /std=c++17 on MSVC
# OPTIONAL:
#---------------------------------
set(CMAKE_CXX_STANDARD 17)     
set(CMAKE_VERBOSE_MAKEFILE ON)

#========== Targets Configurations ============#

# Build an executable (Unix-like OSes generates ./openglDemo1, on
# Windows ./opengDemo1.exe)
# ..........................................
add_executable(engine src/main.cpp)

# Set executable dependency libraries
list(APPEND CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/cmake")
find_package(glfw3 REQUIRED)
target_link_libraries(engine ${GLFW3_LIBRARY})
target_include_directories(engine PUBLIC ${GLFW3_INCLUDE_DIR})

find_package(OpenGL REQUIRED)
target_link_libraries(engine OpenGL::GL)

# Add extension .bin to executable name to make it easier
# to identify that the binary file is an executable.
# So, it turns  openglDemo1 becomes openglDemo1.bin 
if(UNIX)
  set_target_properties(engine PROPERTIES SUFFIX ".bin")
endif()

# Add target to run executable 
add_custom_target(run-ex1
    COMMAND engine 
    DEPENDS engine 
    WORKING_DIRECTORY ${CMAKE_PROJECT_DIR}
)